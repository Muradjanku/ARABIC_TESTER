from telebot import TeleBot, types

bot = TeleBot("YOUR_BOT_TOKEN_HERE")

# Testlar ma'lumotlari (A1โA2)
a1_a2_tests = [
    {"question": "ุฃูุง ___ ุฃูุฑููุง.", "options": ["ูู", "ูู", "ุฅูู", "ูุน"], "answer": "ูู"},
    {"question": "ุฃูุง ___.", "options": ["ูุตุฑู", "ูุฑูุณู", "ุณุนูุฏู", "ุนุฑุงูู"], "answer": "ูุฑูุณู"},
    {"question": "ูู ___ ุฃุญูุฏ.", "options": ["ูุนูู", "ุงุณูู", "ุฐูุจ", "ุตุฏููู"], "answer": "ุงุณูู"},
    {"question": "___ ุฃูุช ูุฑูุณูุ", "options": ["ุฃูู", "ูุชู", "ูู", "ููู"], "answer": "ูู"},
    {"question": "ูุงุทูุฉ ___ ููุฏ.", "options": ["ููุณ", "ุนูุฏูุง", "ูุนูุง", "ุชุณูู"], "answer": "ุนูุฏูุง"},
    {"question": "ุฃุญูุฏ ___ ููุฏ ูุจูุช.", "options": ["ุนูุฏู", "ูุนูู", "ููุณ", "ุฐูุจ"], "answer": "ุนูุฏู"},
    {"question": "ุจูุช ุฃุญูุฏ ___.", "options": ["ุตุบูุฑ", "ุจุนูุฏ", "ูุจูุฑ", "ูุฏูู"], "answer": "ูุจูุฑ"},
    {"question": "___ ุจูุช ุตุบูุฑ.", "options": ["ูุฐุง", "ูุฐู", "ููุงู", "ุฐูู"], "answer": "ูุฐุง"},
    {"question": "___ ุนูุฏู ุณูุงุฑุฉ.", "options": ["ููุณ", "ุนูุฏูุง", "ููุงู", "ูุนู"], "answer": "ููุณ"},
    {"question": "ูุญูุฏ ___ ูู ุงูุฌุงูุนุฉ.", "options": ["ูุฏุฑุณ", "ูุนูู", "ูุณูู", "ูุฐูุจ"], "answer": "ูุนูู"},
    {"question": "ุณูุฒุงู ุชุณูู ___ ุงููุงูุฑุฉ.", "options": ["ูุน", "ูู", "ุฅูู", "ูู"], "answer": "ูู"},
    {"question": "___ ุชุฐูุจ ุฅูู ุงูุฌุงูุนุฉ ูู ููู.", "options": ["ูุญูุฏ", "ุณูุฒุงู", "ูุงุทูุฉ", "ุฃุญูุฏ"], "answer": "ูุงุทูุฉ"},
    {"question": "___ ุชุฐูุจ ุฅูู ุงูุฌุงูุนุฉุ", "options": ["ุฃูู", "ูุชู", "ููุงุฐุง", "ููู"], "answer": "ูุชู"},
    {"question": "ุฃุญูุฏ ุฐูุจ ุฅูู ุงูุฌุงูุนุฉ ___.", "options": ["ุงูููู", "ุบุฏุง", "ุฃูุณ", "ุงูุฃุณุจูุน"], "answer": "ุฃูุณ"},
    {"question": "ูุงุทูุฉ ุณุชุฒูุฑ ุณูุฒุงู ___.", "options": ["ุงูููู", "ุบุฏุง", "ุฃูุณ", "ุงูุฃุณุจูุน"], "answer": "ุบุฏุง"},
    {"question": "ูุญูุฏ ___ ูุฐูุจ ุฅูู ุงูุนูู ุบุฏุง.", "options": ["ุณูู", "ูู", "ูุฏ", "ูุงู"], "answer": "ูู"},
    {"question": "ูู ___ ูุณุงูุฑูู ุงูุฃุณุจูุน ุงููุงุฏู.", "options": ["ูู", "ุณูู", "ูุฏ", "ูุงููุง"], "answer": "ุณูู"},
    {"question": "ูุญู ุณุงูุฑูุง ุงูุฃุณุจูุน ___.", "options": ["ุงููุงุฏู", "ุงููุงุถู", "ุงูุญุงูู", "ุงูุฌุฏูุฏ"], "answer": "ุงููุงุถู"},
    {"question": "ูุงุทูุฉ ___ ุตุฏููุชูุง ุฃูุณ.", "options": ["ุฏุฑุณุช", "ุฒุงุฑุช", "ุณุงูุฑุช", "ุนููุช"], "answer": "ุฒุงุฑุช"},
    {"question": "ุฃุญูุฏ ___ ูุฒุฑ ุตุฏููู ุฃูุณ.", "options": ["ูุฏ", "ูู", "ุณูู", "ูุงู"], "answer": "ูู"},
    {"question": "ุฃูุง ุฃุนูุฏ ___ ุงูุจูุช ุงูุณุงุนุฉ ุงูุฎุงูุณุฉ.", "options": ["ูู", "ุฅูู", "ูู", "ูุน"], "answer": "ุฅูู"},
    {"question": "ุฒุงุฑ ุตุฏููู ___ ุฐูุจ ุฅูู ุงูุณูู.", "options": ["ูุจู ุฃู", "ุจุนุฏ ุฃู", "ูุฃู", "ุฅุฐุง"], "answer": "ุจุนุฏ ุฃู"},
    {"question": "ุณุฃูุงู ุจุนุฏ ุฃู ___ ุงููููู.", "options": ["ุฃูุชุจ", "ุฃุดุงูุฏ", "ุฃุฏุฑุณ", "ุฃุนูู"], "answer": "ุฃุดุงูุฏ"},
    {"question": "ุฃุฑูุฏ ___ ุฃุดุชุฑู ุณูุงุฑุฉ ุฌุฏูุฏุฉ.", "options": ["ุฅุฐุง", "ุฃู", "ูุฃู", "ููู"], "answer": "ุฃู"},
    {"question": "ูู ูุญุจูู ุฃู ___ ุงููุบุฉ ุงูุนุฑุจูุฉ.", "options": ["ูุดุงูุฏูุง", "ูุฏุฑุณูุง", "ูุนูููุง", "ูุณุงูุฑูุง"], "answer": "ูุฏุฑุณูุง"},
    {"question": "ูุฐู ุตุฏููุชู ___ ุชุฏุฑุณ ูู ุงูุฌุงูุนุฉ.", "options": ["ุงูุชู", "ุงูุฐู", "ุงูุชู ูู", "ุงูุฐูู"], "answer": "ุงูุชู"},
    {"question": "ุฃูู ุงููุชุจ ุงูุชู ___ ุฃูุณุ", "options": ["ูุฑุฃุชูุง", "ุงุดุชุฑูุชูุง", "ูุชุจุชูุง", "ุฏุฑุณุชูุง"], "answer": "ุงุดุชุฑูุชูุง"},
    {"question": "ุฃูุง ุฃุฏุฑุณ ุงูุนุฑุจูุฉ ___ ุตุฏููู ูุฏุฑุณ ุงููุฑูุณูุฉ.", "options": ["ุฃู", "ุจูููุง", "ููู", "ุฅุฐุง"], "answer": "ุจูููุง"},
    {"question": "ูุง ุฃุญุจ ___ ุฅูู ุงูุณูู.", "options": ["ุงูุฐูุงุจ", "ุงููุฑุงุกุฉ", "ุงูุนูู", "ุงูุฏุฑุงุณุฉ"], "answer": "ุงูุฐูุงุจ"},
    {"question": "ุนุฏุช ุฅูู ุงูุจูุช ุจุนุฏ ___ ุตุฏููู.", "options": ["ุงูุฏุฑุงุณุฉ", "ููุงุจูุฉ", "ุงูุณูุฑ", "ุงูุนูู"], "answer": "ููุงุจูุฉ"},
    {"question": "ููุช ูุจูุฑุง ___ ุฃุตุญู ูุจูุฑุง.", "options": ["ูุฃู", "ููู", "ุฅุฐุง", "ุจุนุฏ"], "answer": "ููู"},
    {"question": "ููุช ุทุงูุจุง ู___ ูุฏุฑุณุง.", "options": ["ุณุฃููู", "ุฃุตุจุญุช", "ููุช", "ุฃููู"], "answer": "ุฃุตุจุญุช"},
    {"question": "ูุฑุฃุช ุฃุฑุจุนุฉ ___ ุฎูุงู ุงูุฅุฌุงุฒุฉ.", "options": ["ุฃููุงู", "ูุชุจ", "ุฃูุงูู", "ุฃูุงู"], "answer": "ูุชุจ"},
    {"question": "ุบุงุฏุฑุช ุงููุงูุฑุฉ ููู ___ ุฃุณูู ูููุง.", "options": ["ุฃุจุฏุฃ", "ุฃุนุฏ", "ุฃุฐูุจ", "ุฃุนูู"], "answer": "ุฃุนุฏ"},
    {"question": "ุจุฏุฃุช ุงูุนูู ___.", "options": ["ูุชุนุจุง", "ูุณุฑูุฑุง", "ุญุฒููุง", "ูุดุบููุง"], "answer": "ูุณุฑูุฑุง"},
    {"question": "ุงูุชุดุฑ ุงูุฎุจุฑ ___ ูุงุณุนุง.", "options": ["ูุฑุงุกุฉ", "ุงูุชุดุงุฑุง", "ุณูุฑุง", "ุนููุง"], "answer": "ุงูุชุดุงุฑุง"},
    {"question": "ุชูููุช ุนู ุงูุชุฏุฎูู ___ ูู ุงูุฃูุฑุงุถ.", "options": ["ุญุจุง", "ุฎููุง", "ูุฑุญุง", "ุฑุบุจุฉ"], "answer": "ุฎููุง"},
    {"question": "___ ุนููุช ุฃูู ูุฑูุถ ูุฒุฑุชู.", "options": ["ุฅุฐุง", "ูู", "ูุฃู", "ุจุนุฏ"], "answer": "ูู"},
]

# /start komandasi
def send_main_menu(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add("๐ Testlar", "๐ Lugโat")
    markup.add("๐ Kitoblar", "๐ Orqaga")
    bot.send_message(message.chat.id, "Kerakli boโlimni tanlang:", reply_markup=markup)

@bot.message_handler(commands=['start'])
def start(message):
    send_main_menu(message)

# Testlar boโlimi
@bot.message_handler(func=lambda msg: msg.text == "๐ Testlar")
def test_menu(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add("A1โA2", "B1โB2", "C1โC2")
    markup.add("๐ Orqaga")
    bot.send_message(message.chat.id, "Test darajasini tanlang:", reply_markup=markup)

# A1-A2 Test boshlanishi
@bot.message_handler(func=lambda msg: msg.text == "A1โA2")
def start_a1_tests(message):
    bot.send_message(message.chat.id, "A1โA2 testlar boshlandi.")
    ask_test_question(message.chat.id, 0)

def ask_test_question(chat_id, index):
    if index < len(a1_a2_tests):
        q = a1_a2_tests[index]
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
        for opt in q['options']:
            markup.add(opt)
        msg = bot.send_message(chat_id, q['question'], reply_markup=markup)
        bot.register_next_step_handler(msg, check_answer, index)
    else:
        bot.send_message(chat_id, "Test tugadi. โ")

def check_answer(message, index):
    correct = a1_a2_tests[index]['answer']
    if message.text == correct:
        bot.send_message(message.chat.id, "โ Toโgโri")
    else:
        bot.send_message(message.chat.id, f"โ Notoโgโri. Toโgโri javob: {correct}")
    ask_test_question(message.chat.id, index + 1)

# Orqaga
@bot.message_handler(func=lambda msg: msg.text == "๐ Orqaga")
def go_back(message):
    send_main_menu(message)

print("Bot ishga tushdi...")
bot.infinity_polling()
